- name: Provisioning config - Create directories
  file:  
    path: "/opt/grafana/provisioning/{{ item.directory }}"
    state: directory
  loop:
    - { directory: 'dashboards' }
    - { directory: 'datasources' }

- name: Template grafana.ini
  template:
    dest: /opt/grafana/grafana.ini
    src: grafana.ini.j2
    mode: "0700"
  notify: Restart Grafana
  no_log: yes

- name: Template files
  template:
    dest: "/opt/grafana/provisioning/{{ item.directory }}/{{ item.file }}"
    src: "{{ item.srcfile }}"
    mode: '0644'
  loop:
    - { directory: 'dashboards', file: 'default.yaml', srcfile: 'dashboard.yaml.j2' }
    - { directory: 'datasources', file: 'default.yaml', srcfile: 'datasource.yaml.j2' }
  notify: Restart Grafana


- name: Copy files
  copy:
    dest: "/opt/grafana/provisioning/dashboards/{{ item }}"
    src: "{{ item }}"
  loop:
    - main.json 
    - mysql.json
    - syslog.json
  notify: Restart Grafana

- name: Start Grafana in docker container
  community.docker.docker_container:
    name: grafana
    image: grafana/grafana
    volumes: /opt/grafana:/etc/grafana
    ports: "{{ grafana_port }}:3000"
    state: started
    restart_policy: "always"
- name: Add Grafana CNAME records
  community.general.nsupdate:
    key_name: "nsupdate.key"
    key_algorithm: "hmac-sha256"
    key_secret: "{{ dns_nsupdate_key }}"
    server: "localhost"
    zone: "{{ fqdn }}"
    record: "{{ item.key }}"
    type: "CNAME"
    value: "{{ item.value }}"
  loop: "{{ dns_grafana_records | dict2items }}"
  delegate_to: "{{ groups['dns_primary'][0] }}"
